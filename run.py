# =================================================================================
#  VIDEO ARCHIVE BOT (GitHub Actions Edition)
#  –ê–≤—Ç–æ—Ä: Denlifik & AI Assistant
#  –í–µ—Ä—Å–∏—è: 1.0 (–°—Ç–∞–±–∏–ª—å–Ω–∞—è)
#
#  –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:
#  1. –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö GitHub –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.
#  2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç RSS-–ª–µ–Ω—Ç—É YouTube-–∫–∞–Ω–∞–ª–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ.
#  3. –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ –≤–∏–¥–µ–æ, –æ–Ω —Å–∫–∞—á–∏–≤–∞–µ—Ç –∏—Ö –≤ –∫–∞—á–µ—Å—Ç–≤–µ 480p, –∏—Å–ø–æ–ª—å–∑—É—è cookies
#     –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, —á—Ç–æ–±—ã –æ–±–æ–π—Ç–∏ –∑–∞—â–∏—Ç—É YouTube –æ—Ç –±–æ—Ç–æ–≤.
#  4. –° –ø–æ–º–æ—â—å—é FFmpeg –Ω–∞—Ä–µ–∑–∞–µ—Ç –∫–∞–∂–¥–æ–µ –≤–∏–¥–µ–æ –Ω–∞ 10-–º–∏–Ω—É—Ç–Ω—ã–µ –∫—É—Å–∫–∏.
#  5. –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–∞–∂–¥—ã–π –∫—É—Å–æ–∫ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π Telegram-–∫–∞–Ω–∞–ª.
#  6. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç JSON-—Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –≤–∏–¥–µ–æ –∏ ID –∏—Ö —á–∞—Å—Ç–µ–π –≤ Telegram.
#  7. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —ç—Ç–æ—Ç JSON-—Ñ–∞–π–ª –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π GitHub.
# =================================================================================

import os
import json
import subprocess
import feedparser
from telegram import Bot
import asyncio
import time

# --- –ì–õ–ê–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ---
YOUTUBE_CHANNEL_URL = "https://www.youtube.com/feeds/videos.xml?channel_id=UCAvrIl6ltV8MdJo3mV4Nl4Q"
TEMP_FOLDER = 'temp_videos'      # –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –¥–ª—è —Ñ–∞–π–ª–æ–≤
DB_FILE = 'videos.json'          # –§–∞–π–ª –Ω–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
MAX_VIDEOS_ENTRIES = 25          # –°–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–∏–¥–µ–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤ –±–∞–∑–µ
CHUNK_DURATION_SECONDS = 600     # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –∫—É—Å–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (600—Å = 10–º–∏–Ω)
COOKIE_FILE = 'cookies.txt'      # –ò–º—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å cookies

# --- –ù–ê–°–¢–†–û–ô–ö–ò –ò–ó –°–ï–ö–†–ï–¢–û–í GITHUB ---
# –≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∏–∑ Secrets —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
CHANNEL_ID = os.environ.get('TELEGRAM_CHANNEL_ID')
YOUTUBE_COOKIES_DATA = os.environ.get('YOUTUBE_COOKIES')

# =================================================================================
# --- –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ---
# =================================================================================

def get_video_db():
    """–ß–∏—Ç–∞–µ—Ç JSON-—Ñ–∞–π–ª —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ."""
    if os.path.exists(DB_FILE):
        with open(DB_FILE, 'r') as f:
            return json.load(f)
    return []

def save_video_db(db):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ –≤ JSON-—Ñ–∞–π–ª."""
    with open(DB_FILE, 'w') as f:
        json.dump(db, f, indent=4)

async def upload_to_telegram(filepath, title):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –æ–¥–∏–Ω –≤–∏–¥–µ–æ-—Ñ–∞–π–ª –≤ Telegram."""
    print(f"  > –ó–∞–≥—Ä—É–∂–∞—é {os.path.basename(filepath)} –≤ Telegram...")
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Bot –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–≥—Ä—É–∑–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ç—å—é
    bot = Bot(token=BOT_TOKEN)
    try:
        with open(filepath, 'rb') as video_file:
            message = await bot.send_video(
                chat_id=CHANNEL_ID, 
                video=video_file, 
                caption=title,
                # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
                read_timeout=300, 
                write_timeout=300, 
                connect_timeout=300
            )
        # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Ç–µ–≤—É—é —Å–µ—Å—Å–∏—é –±–æ—Ç–∞ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        await bot.shutdown()
        print(f"  ‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.")
        return message.video.file_id
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤ Telegram: {e}")
        await bot.shutdown()
        return None

# =================================================================================
# --- –ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê –û–ë–†–ê–ë–û–¢–ö–ò –í–ò–î–ï–û ---
# =================================================================================

async def process_video_async(video_id, title):
    """–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ –≤–∏–¥–µ–æ: —Å–∫–∞—á–∞—Ç—å -> –Ω–∞—Ä–µ–∑–∞—Ç—å -> –∑–∞–≥—Ä—É–∑–∏—Ç—å."""
    print("-" * 50)
    print(f"üé¨ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ: {title}")
    
    video_url = f"https://www.youtube.com/watch?v={video_id}"
    video_parts_info = []

    try:
        # --- –®–ê–ì 1: –°–ö–ê–ß–ò–í–ê–ù–ò–ï ---
        print("  [1/3] –°–∫–∞—á–∏–≤–∞—é –ø–æ–ª–Ω–æ–µ –≤–∏–¥–µ–æ –≤ 480p (—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π)...")
        temp_filepath_template = os.path.join(TEMP_FOLDER, f'{video_id}_full.%(ext)s')
        
        command_dl = [
            'yt-dlp',
            '--cookies', COOKIE_FILE,
            '--user-agent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36',
            '--no-check-certificate',
            '-f', 'best[height<=480]', 
            '--output', temp_filepath_template, 
            video_url
        ]
        subprocess.run(command_dl, check=True, timeout=900)
        
        full_filename = next((f for f in os.listdir(TEMP_FOLDER) if f.startswith(f"{video_id}_full")), None)
        if not full_filename:
            print("  ‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª –Ω–µ —Å–∫–∞—á–∞–ª—Å—è.")
            return None

        # --- –®–ê–ì 2: –ù–ê–†–ï–ó–ö–ê ---
        full_filepath = os.path.join(TEMP_FOLDER, full_filename)
        print("  ‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω. [2/3] –ù–∞—á–∏–Ω–∞—é –Ω–∞—Ä–µ–∑–∫—É...")

        chunk_filename_template = os.path.join(TEMP_FOLDER, f"{video_id}_part_%03d.mp4")
        subprocess.run(['ffmpeg', '-i', full_filepath, '-c', 'copy', '-map', '0', '-segment_time', str(CHUNK_DURATION_SECONDS), '-f', 'segment', '-reset_timestamps', '1', chunk_filename_template], check=True, timeout=900)
        os.remove(full_filepath) # –°—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª

        # --- –®–ê–ì 3: –ó–ê–ì–†–£–ó–ö–ê ---
        chunks = sorted([f for f in os.listdir(TEMP_FOLDER) if f.startswith(f"{video_id}_part_")])
        print(f"  ‚úÖ –ù–∞—Ä–µ–∑–∞–Ω–æ {len(chunks)} —á–∞—Å—Ç–µ–π. [3/3] –ó–∞–≥—Ä—É–∂–∞—é –≤ Telegram...")

        for i, chunk_filename in enumerate(chunks):
            chunk_filepath = os.path.join(TEMP_FOLDER, chunk_filename)
            part_title = f"{title} - –ß–∞—Å—Ç—å {i+1}"
            file_id = await upload_to_telegram(chunk_filepath, part_title)
            if file_id:
                video_parts_info.append({'part_num': i + 1, 'file_id': file_id})
            os.remove(chunk_filepath) # –°—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º –∫—É—Å–æ–∫
        
        if video_parts_info:
            print(f"üéâ –í–∏–¥–µ–æ '{title}' –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ!")
            return {'id': video_id, 'title': title, 'parts': video_parts_info}
        
        return None

    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¥–ª—è '{title}': {e}")
        return None

# =================================================================================
# --- –¢–û–ß–ö–ê –í–•–û–î–ê –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï ---
# =================================================================================

def main():
    """–ì–ª–∞–≤–Ω–∞—è —É–ø—Ä–∞–≤–ª—è—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
    if not os.path.exists(TEMP_FOLDER):
        os.makedirs(TEMP_FOLDER)
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª cookies.txt –∏–∑ —Å–µ–∫—Ä–µ—Ç–∞ GitHub
    if YOUTUBE_COOKIES_DATA:
        with open(COOKIE_FILE, 'w') as f:
            f.write(YOUTUBE_COOKIES_DATA)
        print("‚ÑπÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª cookies.txt —Å–æ–∑–¥–∞–Ω.")
    else:
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –°–µ–∫—Ä–µ—Ç YOUTUBE_COOKIES –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç –Ω–µ —É–¥–∞—Ç—å—Å—è.")
    
    try:
        print("\n" + "="*50)
        print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ (GitHub Actions —Å Cookies)")
        print("="*50 + "\n")
        
        feed = feedparser.parse(YOUTUBE_CHANNEL_URL)
        if not feed.entries:
            print("RSS-–ª–µ–Ω—Ç–∞ –ø—É—Å—Ç–∞. –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É.")
            return

        db = get_video_db()
        existing_ids = {video['id'] for video in db}
        
        new_videos_to_process = [{'id': e.yt_videoid, 'title': e.title} for e in feed.entries if e.yt_videoid not in existing_ids]

        if not new_videos_to_process:
            print("‚úÖ –ù–æ–≤—ã—Ö –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –í—Å–µ –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.")
            return

        print(f"üî• –ù–∞–π–¥–µ–Ω–æ {len(new_videos_to_process)} –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
        
        processed_videos = []
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ –ø–æ –æ–¥–Ω–æ–º—É
        for video_info in reversed(new_videos_to_process):
            result = asyncio.run(process_video_async(video_info['id'], video_info['title']))
            if result:
                processed_videos.append(result)
            time.sleep(5) # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤–∏–¥–µ–æ
        
        # –ï—Å–ª–∏ –±—ã–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –Ω–æ–≤—ã–µ –≤–∏–¥–µ–æ, –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if processed_videos:
            final_db = processed_videos + db
            # –û–±—Ä–µ–∑–∞–µ–º –±–∞–∑—É, –µ—Å–ª–∏ –æ–Ω–∞ —Å—Ç–∞–ª–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–π
            while len(final_db) > MAX_VIDEOS_ENTRIES:
                final_db.pop()
            save_video_db(final_db)
            print("\n" + "="*50)
            print("üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö videos.json —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏.")
            print("="*50)

    finally:
        # –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ —É–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å cookies –≤ –∫–æ–Ω—Ü–µ —Ä–∞–±–æ—Ç—ã
        if os.path.exists(COOKIE_FILE):
            os.remove(COOKIE_FILE)
            print("‚ÑπÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª cookies.txt —É–¥–∞–ª–µ–Ω.")

if __name__ == '__main__':
    main()
